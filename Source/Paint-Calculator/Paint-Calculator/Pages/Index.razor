<!-- Index.razor -->
<!-- The home page of the site -->

<!-- Set the location of this page to be / -->
@page "/"

<!-- Use the Paint_Calculator.Data classes we have created -->
@using Paint_Calculator.Data

<!-- Inject the Processesing Service we have created -->
@inject FormProcessesingService ProcessesingService

<!-- Setting the page title -->
<PageTitle>Paint Calculator</PageTitle>


<div id="main-section">
    <div class="mini-section">

        <h2>Dimensions</h2>

        <!-- The edit form, where the user can enter the dimensions and surface type -->
        <EditForm Model="@PaintCalculator" OnSubmit="@HandleSubmit">
            <p class="label">Width (metres)</p>
            <InputNumber class="number-input" id="width" @bind-Value="PaintCalculator.Width" />
            <br>
            <p class="label">Length (metres)</p>
            <InputNumber class="number-input" id="length" @bind-Value="PaintCalculator.Length" />
            <br>
            <p class="label">Height (metres)</p>
            <InputNumber class="number-input" id="height" @bind-Value="PaintCalculator.Height" />
            <br>

            <button id="calculate-button" type="submit">Calculate</button>
        </EditForm>
    </div>

    
    <div class="mini-section">
        <h2>Instructions</h2>
        <p>Fill in the dimensions boxes on the left with the dimensions of your room. Then click calculate.</p>

        <!-- The outputted data --> 
        <h2>What You Need</h2>
        <p>Room Volume: @RoomVolume metres^3</p>
        <p>Floor Area: @FloorArea metres^2</p>
        <p>Paint Required: @PaintRequired litres</p>
    </div>
</div>

<!-- The processing code -->
@code {
    public decimal RoomVolume = 0;  // RoomVolume (decimal): Store the volume of the room
    public decimal FloorArea = 0;   // FloorArea (decimal): Store the area of the floor
    public decimal PaintRequired = 0;   // PaintRequired (decimal): Store the paint required for the room

    private FormModel PaintCalculator = new();  // PaintCalculator (FormModel): Stores the form date

    // HandleSubmit
    // Returns: void
    // Parameters: none
    // Description: Processes the submitted data and updates the page
    private void HandleSubmit()
    {
        ReturnModel ReturnData = ProcessesingService.ProcessForm(PaintCalculator);      // Send of the data and assign the returned data to the ReturnData object

        // Assign the values to the created variables
        RoomVolume = ReturnData.Volume;
        FloorArea = ReturnData.FloorArea;
        PaintRequired = ReturnData.PaintRequired;
    }
}